{
    "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
    "name": "aim",
    "patterns": [
        { "include": "#comments" },
        { "include": "#frontmatter" },
        { "include": "#variables" },
        { "include": "#blocks" },
        { "include": "#strings" },
        { "include": "#codeblocks" },
        { "include": "#markdown" },
        { "include": "#functions" }
    ],
    "repository": {
        "comments": {
            "patterns": [
                {
                    "name": "comment.line.aim",
                    "begin": "<!--",
                    "end": "-->"
                }
            ]
        },
        "frontmatter": {
            "name": "entity.name.section.aim",
            "begin": "^---$",
            "end": "^---$",
            "patterns": [
                { "include": "#strings" },
                {
                    "match": "^\\s*([\\w-]+):\\s*(.*)$",
                    "captures": {
                        "1": { "name": "variable.other.key.aim" },
                        "2": { "name": "string.unquoted.aim" }
                    }
                }
            ]
        },
        "variables": {
            "patterns": [
                { "name": "variable.other.aim", "match": "v\\[([^\\]]+)\\]" },
                { "name": "variable.other.aim", "match": "\\$\\{([^}]+)\\}" }
            ]
        },
        "blocks": {
            "patterns": [
                {
                    "name": "keyword.control.aim",
                    "match": "::(ai|flow|container|loop|media|structured-output|form|input|select|button)\\{[^}]*\\}"
                },
                {
                    "name": "keyword.control.aim",
                    "match": "\\{(if|else-if|else)=[^}]*\\}"
                },
                {
                    "name": "keyword.control.aim",
                    "begin": "::(ai|flow|container|loop|media|structured-output|form|input|select|button)\\{",
                    "end": "\\}",
                    "patterns": [
                        { "match": "#([\\w-]+)", "name": "entity.name.tag.aim" },
                        {
                            "match": "([\\w-]+)=\"([^\"]*?)\"",
                            "captures": {
                                "1": { "name": "entity.other.attribute-name.aim" },
                                "2": { "name": "string.quoted.double.aim" }
                            }
                        }
                    ]
                }
            ]
        },
        "strings": {
            "name": "string.quoted.double.aim",
            "begin": "\"",
            "end": "\"",
            "patterns": [
                { "name": "constant.character.escape.aim", "match": "\\\\." }
            ]
        },
        "codeblocks": {
            "patterns": [
                {
                    "name": "markup.fenced_code.block.aim",
                    "begin": "```([a-zA-Z0-9_-]+)?\\s*\\{([^}]*?)\\}",
                    "end": "```",
                    "beginCaptures": {
                        "1": { "name": "entity.name.type.aim" },
                        "2": { "name": "meta.embedded.block.aim" }
                    },
                    "patterns": [
                        { "include": "source.js" },
                        { "include": "source.ts" },
                        { "include": "source.python" },
                        { "include": "text.html.markdown" }
                    ]
                }
            ]
        },
        "markdown": {
            "patterns": [
                {
                    "match": "^\\s*(#{1,6})\\s+(.+)$",
                    "captures": {
                        "1": { "name": "markup.heading.aim" },
                        "2": { "name": "entity.name.section.aim" }
                    }
                },
                {
                    "match": "\\*\\*(.+?)\\*\\*",
                    "captures": {
                        "1": { "name": "markup.bold.aim" }
                    }
                },
                {
                    "match": "_(.+?)_",
                    "captures": {
                        "1": { "name": "markup.italic.aim" }
                    }
                },
                {
                    "match": "\\[(.+?)\\]\\((.+?)\\)",
                    "captures": {
                        "1": { "name": "string.other.link.title.aim" },
                        "2": { "name": "markup.underline.link.aim" }
                    }
                }
            ]
        },
        "functions": {
            "patterns": [
                { "match": "@([\\w-]+)\\(", "name": "entity.name.function.aim" }
            ]
        }
    },
    "scopeName": "source.aim"
}